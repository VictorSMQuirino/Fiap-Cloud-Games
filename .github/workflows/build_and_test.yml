name: .NET Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
            
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build project
        run: dotnet build --no-restore --configuration Release -p:DebugType=portable
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .
          
      - name: Run tests  
        run: dotnet test tests/FIAP_CloudGames.Tests/FIAP_CloudGames.Tests.csproj --no-build --configuration Release --settings coverlet.runsettings --collect:"XPlat Code Coverage" --results-directory ./coverage
      
      - name: Find coverage report path
        id: find_report
        run: |
          REPORT_PATH=$(find ./coverage -name coverage.cobertura.xml)
          echo "Found report at: $REPORT_PATH"
          echo "path=$REPORT_PATH" >> "$GITHUB_OUTPUT"

      - name: Fix coverage report paths
        if: steps.find_report.outputs.path != ''
        run: |
          echo "Fixing paths in ${{ steps.find_report.outputs.path }}"
          sed -i "s|$GITHUB_WORKSPACE/||g" ${{ steps.find_report.outputs.path }}
          echo "Paths in report fixed. Showing first 10 lines of the fixed file:"
          head -n 10 ${{ steps.find_report.outputs.path }}  
        
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.find_report.outputs.path }}
          name: codecov-umbrella
          fail_ci_if_error: true